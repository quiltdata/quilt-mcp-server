name: Pull Request Validation

on:
  pull_request:
    branches: ['**']
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build environment
      uses: ./.github/actions/setup-build-env
      with:
        python-version: '3.11'

    - name: Run PR tests
      uses: ./.github/actions/run-tests
      with:
        test-target: 'test-ci'
        artifact-name: 'test-results-pr'
        python-version: '3.11'
      env:
        # AWS credentials for tests that need them
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-1' }}

        # Quilt configuration
        QUILT_DEFAULT_BUCKET: ${{ secrets.QUILT_DEFAULT_BUCKET }}
        QUILT_CATALOG_URL: ${{ secrets.QUILT_CATALOG_URL }}
        QUILT_TEST_PACKAGE: ${{ secrets.QUILT_TEST_PACKAGE }}
        QUILT_TEST_ENTRY: ${{ secrets.QUILT_TEST_ENTRY }}

  dev-release:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 30
    if: startsWith(github.head_ref, 'dev-') || contains(github.event.pull_request.labels.*.name, 'dev-release')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build environment
      uses: ./.github/actions/setup-build-env
      with:
        python-version: '3.11'
        include-nodejs: 'true'

    - name: Generate dev version
      id: version
      run: |
        # Read base version from pyproject.toml
        BASE_VERSION=$(python3 -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        DEV_VERSION="$BASE_VERSION-dev-$TIMESTAMP"
        echo "dev_version=$DEV_VERSION" >> $GITHUB_OUTPUT
        echo "Generated dev version: $DEV_VERSION"

    - name: Create dev tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ steps.version.outputs.dev_version }}" -m "Development build v${{ steps.version.outputs.dev_version }}"
        git push origin "v${{ steps.version.outputs.dev_version }}"

    - name: Create development release
      uses: ./.github/actions/create-release
      with:
        tag-version: ${{ steps.version.outputs.dev_version }}