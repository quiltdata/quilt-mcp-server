name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production  # Use GitHub environment for additional protection
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.11
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.CDK_DEFAULT_REGION || 'us-east-1' }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Create .env file from secrets
      run: |
        cat > .env << EOF
        QUILT_READ_POLICY_ARN=${{ secrets.QUILT_READ_POLICY_ARN }}
        CDK_DEFAULT_ACCOUNT=${{ secrets.CDK_DEFAULT_ACCOUNT }}
        CDK_DEFAULT_REGION=${{ secrets.CDK_DEFAULT_REGION || 'us-east-1' }}
        AWS_PROFILE=default
        EOF
        
    - name: Install dependencies
      run: uv sync --group deploy
      
    - name: Deploy to AWS
      run: ./deploy.sh
      
    - name: Comment PR with deployment info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          try {
            const apiEndpoint = execSync('aws cloudformation describe-stacks --stack-name QuiltMcpStack --region ${{ secrets.CDK_DEFAULT_REGION || "us-east-1" }} --query "Stacks[0].Outputs[?OutputKey==\'ApiEndpoint\'].OutputValue" --output text', { encoding: 'utf8' }).trim();
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Deployment Complete**\n\n**MCP Server URL:** \`${apiEndpoint}\`\n\nYou can test this endpoint in Claude by adding it as a remote MCP server.`
            });
          } catch (error) {
            console.log('Could not post deployment info to PR:', error.message);
          }
