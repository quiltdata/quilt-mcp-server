# DEPRECATED: This workflow has been replaced by pr.yml, push.yml, and release.yml
# as part of A04 automated coverage reporting and CI optimization.
#
# New architecture:
# - pr.yml: Fast PR validation (< 5 minutes) with single Python version
# - push.yml: Comprehensive main branch testing with all Python versions
# - release.yml: Production releases with workflow_run dependencies
#
# This file is kept for reference during transition period.

name: CI (DEPRECATED)

on:
  # Disabled - remove triggers to prevent execution
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run deprecated workflow (for emergency only)'
        required: false
        default: 'false'

jobs:
  deprecated-notice:
    runs-on: ubuntu-latest
    if: github.event.inputs.force_run == 'true'

    steps:
    - name: Deprecated Workflow Notice
      run: |
        echo "⚠️  This workflow is DEPRECATED and replaced by:"
        echo "   - pr.yml: Fast PR validation"
        echo "   - push.yml: Comprehensive main branch testing"
        echo "   - release.yml: Production releases"
        echo ""
        echo "Please use the new workflows for CI/CD operations."
        exit 1

  # Original implementation preserved for reference
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event.inputs.force_run == 'true'
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build environment
      uses: ./.github/actions/setup-build-env
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run tests
      run: |
        echo "Running CI tests for Python ${{ matrix.python-version }}..."
        uv sync --group test
        mkdir -p build/test-results
        if [ "${{ matrix.python-version }}" = "3.11" ]; then
          echo "Running all tests including slow tests for Python 3.11..."
          export PYTHONPATH="src" && QUILT_DISABLE_QUILT3_SESSION=1 uv run python -m pytest tests/ -v -m "not search" --timeout=${PYTEST_TIMEOUT:-120} --disable-warnings \
            --junitxml=build/test-results/results.xml --cov=quilt_mcp --cov-report=xml:build/test-results/coverage.xml
        else
          echo "Running CI tests (skipping slow tests) for Python ${{ matrix.python-version }}..."
          export PYTHONPATH="src" && QUILT_DISABLE_QUILT3_SESSION=1 uv run python -m pytest tests/ -v -m "not search and not slow" --timeout=${PYTEST_TIMEOUT:-120} --disable-warnings \
            --junitxml=build/test-results/results.xml --cov=quilt_mcp --cov-report=xml:build/test-results/coverage.xml
        fi
      env:
        # AWS credentials for tests that need them
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-1' }}

        # Quilt configuration
        QUILT_DEFAULT_BUCKET: ${{ secrets.QUILT_DEFAULT_BUCKET }}
        QUILT_CATALOG_URL: ${{ secrets.QUILT_CATALOG_URL }}
        QUILT_TEST_PACKAGE: ${{ secrets.QUILT_TEST_PACKAGE }}
        QUILT_TEST_ENTRY: ${{ secrets.QUILT_TEST_ENTRY }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py${{ matrix.python-version }}
        path: build/test-results/
        retention-days: 7

  build-and-release:
    if: startsWith(github.ref, 'refs/tags/v') && github.event.inputs.force_run == 'true'
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build environment
      uses: ./.github/actions/setup-build-env
      with:
        python-version: '3.11'
        include-nodejs: 'true'

    - name: Extract version from tag
      id: version
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
        echo "Tag Version: $TAG_VERSION"

    - name: Create release
      uses: ./.github/actions/create-release
      with:
        tag-version: ${{ steps.version.outputs.tag_version }}