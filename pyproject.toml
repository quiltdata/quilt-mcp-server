[project]
name = "quilt-mcp-server"
version = "0.5.6"
description = "Secure MCP server for accessing Quilt data with JWT authentication"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "quilt3>=5.6.0",
    "fastmcp>=0.1.0",
    "mcp>=1.12.0",
    "boto3>=1.34.0",
    "httpx>=0.27.0",
    "cachetools>=5.3.0",
    "matplotlib>=3.7.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "plotly>=5.15.0",
    "altair>=5.0.0",
    "pysam>=0.21.0",
    "biopython>=1.81",
    "pybedtools>=0.9.0",
    "pybigwig>=0.3.18",
    "sqlalchemy>=2.0.0",
    "pyathena>=3.0.0",
    "PyYAML>=6.0.0",
]

[project.scripts]
quilt-mcp = "app.main:main"

[tool.setuptools.packages.find]
where = ["app"]
include = ["quilt_mcp*"]
exclude = ["shared", "scripts"]

[tool.setuptools.package-dir]
"" = "app"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[dependency-groups]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0", 
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.1.0",
]
deploy = [
    "aws-cdk-lib>=2.100.0",
    "constructs>=10.0.0",
]
lint = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "yamllint>=1.35.0",
]
dev = [
    "pytest-xdist>=3.8.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --color=yes"
markers = [
    "aws: marks tests that require AWS credentials and network access",
    "search: marks tests that require search functionality",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "performance: marks tests as performance benchmarks",
    "integration: marks tests as integration tests",
    "error_handling: marks tests as error handling tests",
    "asyncio: marks tests as async tests",
]

[tool.pytest.ini_options.asyncio]
mode = "auto"

[tool.black]
line-length = 100
target-version = ["py311", "py312", "py313"]

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# DXT configuration for Claude Desktop Extensions
[tool.dxt]
bundle = "uv pip install --target build-dxt/build/lib --no-cache-dir --quiet ."
test = "python build-dxt/build/dxt_main.py"
pack = "npx @anthropic-ai/dxt pack build-dxt/build build-dxt/dist/quilt-mcp.dxt"
