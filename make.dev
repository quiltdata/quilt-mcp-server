# Development workflow targets
# Migrated from app/Makefile for Phase 1 consolidation

# Load environment variables from .env if it exists
sinclude .env
export

# Development endpoint configuration
DEV_ENDPOINT ?= http://127.0.0.1:8001/mcp/

.PHONY: test test-all test-unit test-integration test-e2e test-ci lint coverage coverage-html run run-inspector kill dev-clean

# Test Targets
test:
	@echo "Running unit tests (default)..."
	@$(MAKE) test-unit

test-all:
	@echo "Running all tests..."
	@uv sync --group test
	@mkdir -p build/test-results
	@if [ -d "tests" ] && [ "$$(find tests -name "*.py" | wc -l)" -gt 0 ]; then \
		export PYTHONPATH="src" && uv run python -m pytest tests/ -v --cov=quilt_mcp --cov-report=xml:build/test-results/coverage-all.xml --cov-report=term-missing; \
	else \
		echo "No tests found, running import test..."; \
		export PYTHONPATH="src" && uv run python -c "from quilt_mcp.server import main; from quilt_mcp.tools import auth, buckets, packages, package_ops; print('âœ… All imports successful')"; \
	fi
	@echo "Running DXT package validation..."
	@$(MAKE) -f make.deploy dxt-validate

test-unit:
	@echo "Running unit tests only (fast, mocked)..."
	@uv sync --group test
	@mkdir -p build/test-results
	@export PYTHONPATH="src" && uv run python -m pytest tests/unit/ -v --cov=quilt_mcp --cov-report=xml:build/test-results/coverage-unit.xml --cov-report=term-missing

test-integration:
	@echo "Running integration tests (AWS/external services)..."
	@uv sync --group test
	@mkdir -p build/test-results
	@export PYTHONPATH="src" && uv run python -m pytest tests/integration/ -v --cov=quilt_mcp --cov-report=xml:build/test-results/coverage-integration.xml --cov-report=term-missing

test-e2e:
	@echo "Running end-to-end workflow tests..."
	@uv sync --group test
	@mkdir -p build/test-results
	@export PYTHONPATH="src" && uv run python -m pytest tests/e2e/ -v --cov=quilt_mcp --cov-report=xml:build/test-results/coverage-e2e.xml --cov-report=term-missing

test-ci:
	@echo "Running CI tests (unit + integration, skipping e2e and slow tests)..."
	@uv sync --group test
	@mkdir -p build/test-results
	@export PYTHONPATH="src" && QUILT_DISABLE_QUILT3_SESSION=1 uv run python -m pytest tests/unit/ tests/integration/ -v -m "not slow" --timeout=$${PYTEST_TIMEOUT:-120} --disable-warnings \
		--junitxml=build/test-results/results.xml --cov=quilt_mcp --cov-report=xml:build/test-results/coverage.xml

# Code Quality Targets
lint:
	@echo "Running code linting and auto-fixing..."
	@uv sync --group lint
	@echo "Running ruff (format + lint + type check) - auto-fixing..."
	@uv run ruff format src/quilt_mcp/ tests/
	@uv run ruff check --fix src/quilt_mcp/ tests/
	@echo "âœ… All linting completed"

coverage:
	@echo "Running all tests with coverage (â‰¥85% required)..."
	@$(MAKE) test-all
	@echo "Checking coverage threshold..."
	@uv sync --group test
	@export PYTHONPATH="src" && uv run python -m pytest tests/ --cov=quilt_mcp --cov-fail-under=85 --cov-report= -q

coverage-html:
	@echo "Running tests with HTML coverage report..."
	@uv sync --group test
	@export PYTHONPATH="src" && uv run python -m pytest tests/ --cov=quilt_mcp --cov-report=html:htmlcov --cov-report=term-missing -v
	@echo "âœ… HTML coverage report generated in htmlcov/"
	@echo "ðŸ“Š Open htmlcov/index.html in your browser to view the report"

# Development Server Targets
run:
	@echo "Starting local MCP server..."
	@uv sync
	@echo "Server starting on $(DEV_ENDPOINT)"
	@export PYTHONPATH="src" && uv run python src/main.py

run-inspector:
	@echo "Launching MCP Inspector for visual testing..."
	@command -v npx >/dev/null || (echo "Error: npx not found. Please install Node.js first." && exit 1)
	@uv sync
	@echo "Starting MCP Inspector with server at $(DEV_ENDPOINT)"
	@echo "Inspector UI will be available at http://127.0.0.1:6274"
	@export PYTHONPATH="src" && npx @modelcontextprotocol/inspector uv run python src/main.py

kill:
	@echo "Killing running MCP server processes..."
	@pkill -f "python.*main.py" 2>/dev/null || echo "No main.py processes found"
	@pkill -f "python.*quilt_mcp" 2>/dev/null || echo "No quilt_mcp processes found" 
	@pkill -f "@modelcontextprotocol/inspector" 2>/dev/null || echo "No MCP Inspector processes found"
	@lsof -ti :8000 | xargs -r kill 2>/dev/null || echo "No processes on port 8000"
	@lsof -ti :8001 | xargs -r kill 2>/dev/null || echo "No processes on port 8001"
	@echo "âœ… Server kill completed"

# Cleanup Targets
dev-clean:
	@echo "Cleaning Python cache..."
	@find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true
	@find . -type f -name "*.pyc" -delete 2>/dev/null || true
	@echo "Cleaning test artifacts..."
	@rm -rf build/test-results/ .coverage .coverage.* htmlcov/ .pytest_cache/ 2>/dev/null || true
	@find . -name "*.egg-info" -type d -exec rm -rf {} + 2>/dev/null || true
	@echo "Cleaning build artifacts..."
	@rm -rf build/ dist/ .ruff_cache/ 2>/dev/null || true
	@find . -name ".DS_Store" -delete 2>/dev/null || true
	@echo "âœ… Development cleanup completed"